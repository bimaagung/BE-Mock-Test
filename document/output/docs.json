{
  "openapi": "3.0.0",
  "info": {
    "title": "Backend Engineer Mock Test",
    "description": "Mock test requirements for job connect binar academy ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "bimaagungsetya@gmail.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successLogin"
                }
              }
            }
          },
          "400": {
            "description": "Account unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/failedLogin"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyLogin"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/bodyLogin"
              }
            }
          }
        }
      }
    },
    "/api/todo/create": {
      "post": {
        "tags": [
          "Todo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success create todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successTodoById"
                }
              }
            }
          },
          "400": {
            "description": "Todo is existing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/todoExisting"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyTodo"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/bodyTodo"
              }
            }
          }
        }
      }
    },
    "/api/todo/list": {
      "get": {
        "tags": [
          "Todo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get list todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successTodoList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/todo/{id}": {
      "get": {
        "tags": [
          "Todo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get todo by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successTodoById"
                }
              }
            }
          },
          "400": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/todoNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/todo/delete/{id}": {
      "delete": {
        "tags": [
          "Todo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successTodo"
                }
              }
            }
          },
          "400": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/todoNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/todo/update/{id}": {
      "put": {
        "tags": [
          "Todo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success update todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successTodoByIdUpdate"
                }
              }
            }
          },
          "400": {
            "description": "Todo not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/todoNotFound"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bodyUpdateTodo"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/bodyUpdateTodo"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "bodyLogin": {
        "type": "object",
        "properties": {
          "pin": {
            "type": "number",
            "example": 1234
          }
        },
        "xml": {
          "name": "bodyLogin"
        }
      },
      "successLogin": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "User A"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2022-10-18T02:01:39.871Z"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2022-10-18T02:01:39.871Z"
                  }
                }
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NzIsIm5hbWUiOiJDdXN0b21lciBCIiwidXNlcm5hbWUiOiJjdXN0b21lcl9iIiwiZW1haWwiOiJjdXN0b21lcmJAZ21haWwuY29tIiwiaXNfYWRtaW4iOmZhbHNlLCJpYXQiOjE2NjYwNTg0OTksImV4cCI6MTY2NjA4MDA5OX0.TbD6tj-2S_gFWyERrlFHukuNak55csfeal3gmfdGYhg"
              }
            }
          }
        },
        "xml": {
          "name": "successLogin"
        }
      },
      "failedLogin": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "account not available"
          }
        },
        "xml": {
          "name": "failedLogin"
        }
      },
      "bodyTodo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Todo User A"
          },
          "body": {
            "type": "string",
            "example": "This is todo user A"
          }
        },
        "xml": {
          "name": "bodyTodo"
        }
      },
      "bodyUpdateTodo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Update Todo User A"
          },
          "body": {
            "type": "string",
            "example": "This is todo user A after updating"
          }
        },
        "xml": {
          "name": "bodyUpdateTodo"
        }
      },
      "successTodoList": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "Todo User A"
                },
                "body": {
                  "type": "string",
                  "example": "This is todo user A"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2022-10-18T02:01:39.871Z"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2022-10-18T02:01:39.871Z"
                }
              }
            }
          }
        },
        "xml": {
          "name": "successTodoList"
        }
      },
      "successTodoById": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "title": {
                "type": "string",
                "example": "Todo User A"
              },
              "body": {
                "type": "string",
                "example": "This is todo user A"
              },
              "updatedAt": {
                "type": "string",
                "example": "2022-10-18T02:01:39.871Z"
              },
              "createdAt": {
                "type": "string",
                "example": "2022-10-18T02:01:39.871Z"
              }
            }
          }
        },
        "xml": {
          "name": "successTodoById"
        }
      },
      "successTodoByIdUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "message": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "title": {
                "type": "string",
                "example": "Update Todo User A"
              },
              "body": {
                "type": "string",
                "example": "This is todo user A after updating"
              },
              "updatedAt": {
                "type": "string",
                "example": "2022-10-18T02:01:39.871Z"
              },
              "createdAt": {
                "type": "string",
                "example": "2022-10-18T02:01:39.871Z"
              }
            }
          }
        },
        "xml": {
          "name": "successTodoByIdUpdate"
        }
      },
      "successTodo": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "message": {
            "type": "string",
            "example": "success"
          }
        },
        "xml": {
          "name": "successTodo"
        }
      },
      "todoExisting": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "todo is existing"
          }
        },
        "xml": {
          "name": "todoExisting"
        }
      },
      "todoNotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "todo not found"
          }
        },
        "xml": {
          "name": "todoNotFound"
        }
      },
      "unauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "unauthorized"
          }
        },
        "xml": {
          "name": "unauthorized"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}